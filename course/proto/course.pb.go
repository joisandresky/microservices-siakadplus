// Code generated by protoc-gen-go. DO NOT EDIT.
// source: course.proto

package coursepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Course struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Semester             string   `protobuf:"bytes,3,opt,name=semester,proto3" json:"semester,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Course) Reset()         { *m = Course{} }
func (m *Course) String() string { return proto.CompactTextString(m) }
func (*Course) ProtoMessage()    {}
func (*Course) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad75674299e1bb1e, []int{0}
}

func (m *Course) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Course.Unmarshal(m, b)
}
func (m *Course) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Course.Marshal(b, m, deterministic)
}
func (m *Course) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Course.Merge(m, src)
}
func (m *Course) XXX_Size() int {
	return xxx_messageInfo_Course.Size(m)
}
func (m *Course) XXX_DiscardUnknown() {
	xxx_messageInfo_Course.DiscardUnknown(m)
}

var xxx_messageInfo_Course proto.InternalMessageInfo

func (m *Course) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Course) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Course) GetSemester() string {
	if m != nil {
		return m.Semester
	}
	return ""
}

type ListCourseReq struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCourseReq) Reset()         { *m = ListCourseReq{} }
func (m *ListCourseReq) String() string { return proto.CompactTextString(m) }
func (*ListCourseReq) ProtoMessage()    {}
func (*ListCourseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad75674299e1bb1e, []int{1}
}

func (m *ListCourseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCourseReq.Unmarshal(m, b)
}
func (m *ListCourseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCourseReq.Marshal(b, m, deterministic)
}
func (m *ListCourseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCourseReq.Merge(m, src)
}
func (m *ListCourseReq) XXX_Size() int {
	return xxx_messageInfo_ListCourseReq.Size(m)
}
func (m *ListCourseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCourseReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListCourseReq proto.InternalMessageInfo

func (m *ListCourseReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListCourseReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListCourseRes struct {
	Course               []*Course `protobuf:"bytes,1,rep,name=course,proto3" json:"course,omitempty"`
	Total                int32     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListCourseRes) Reset()         { *m = ListCourseRes{} }
func (m *ListCourseRes) String() string { return proto.CompactTextString(m) }
func (*ListCourseRes) ProtoMessage()    {}
func (*ListCourseRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad75674299e1bb1e, []int{2}
}

func (m *ListCourseRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCourseRes.Unmarshal(m, b)
}
func (m *ListCourseRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCourseRes.Marshal(b, m, deterministic)
}
func (m *ListCourseRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCourseRes.Merge(m, src)
}
func (m *ListCourseRes) XXX_Size() int {
	return xxx_messageInfo_ListCourseRes.Size(m)
}
func (m *ListCourseRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCourseRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListCourseRes proto.InternalMessageInfo

func (m *ListCourseRes) GetCourse() []*Course {
	if m != nil {
		return m.Course
	}
	return nil
}

func (m *ListCourseRes) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ReadCourseReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadCourseReq) Reset()         { *m = ReadCourseReq{} }
func (m *ReadCourseReq) String() string { return proto.CompactTextString(m) }
func (*ReadCourseReq) ProtoMessage()    {}
func (*ReadCourseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad75674299e1bb1e, []int{3}
}

func (m *ReadCourseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadCourseReq.Unmarshal(m, b)
}
func (m *ReadCourseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadCourseReq.Marshal(b, m, deterministic)
}
func (m *ReadCourseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadCourseReq.Merge(m, src)
}
func (m *ReadCourseReq) XXX_Size() int {
	return xxx_messageInfo_ReadCourseReq.Size(m)
}
func (m *ReadCourseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadCourseReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadCourseReq proto.InternalMessageInfo

func (m *ReadCourseReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadCourseRes struct {
	Course               *Course  `protobuf:"bytes,1,opt,name=course,proto3" json:"course,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadCourseRes) Reset()         { *m = ReadCourseRes{} }
func (m *ReadCourseRes) String() string { return proto.CompactTextString(m) }
func (*ReadCourseRes) ProtoMessage()    {}
func (*ReadCourseRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad75674299e1bb1e, []int{4}
}

func (m *ReadCourseRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadCourseRes.Unmarshal(m, b)
}
func (m *ReadCourseRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadCourseRes.Marshal(b, m, deterministic)
}
func (m *ReadCourseRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadCourseRes.Merge(m, src)
}
func (m *ReadCourseRes) XXX_Size() int {
	return xxx_messageInfo_ReadCourseRes.Size(m)
}
func (m *ReadCourseRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadCourseRes.DiscardUnknown(m)
}

var xxx_messageInfo_ReadCourseRes proto.InternalMessageInfo

func (m *ReadCourseRes) GetCourse() *Course {
	if m != nil {
		return m.Course
	}
	return nil
}

type CreateCourseReq struct {
	Course               *Course  `protobuf:"bytes,1,opt,name=course,proto3" json:"course,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCourseReq) Reset()         { *m = CreateCourseReq{} }
func (m *CreateCourseReq) String() string { return proto.CompactTextString(m) }
func (*CreateCourseReq) ProtoMessage()    {}
func (*CreateCourseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad75674299e1bb1e, []int{5}
}

func (m *CreateCourseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCourseReq.Unmarshal(m, b)
}
func (m *CreateCourseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCourseReq.Marshal(b, m, deterministic)
}
func (m *CreateCourseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCourseReq.Merge(m, src)
}
func (m *CreateCourseReq) XXX_Size() int {
	return xxx_messageInfo_CreateCourseReq.Size(m)
}
func (m *CreateCourseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCourseReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCourseReq proto.InternalMessageInfo

func (m *CreateCourseReq) GetCourse() *Course {
	if m != nil {
		return m.Course
	}
	return nil
}

type CreateCourseRes struct {
	Course               *Course  `protobuf:"bytes,1,opt,name=course,proto3" json:"course,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCourseRes) Reset()         { *m = CreateCourseRes{} }
func (m *CreateCourseRes) String() string { return proto.CompactTextString(m) }
func (*CreateCourseRes) ProtoMessage()    {}
func (*CreateCourseRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad75674299e1bb1e, []int{6}
}

func (m *CreateCourseRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCourseRes.Unmarshal(m, b)
}
func (m *CreateCourseRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCourseRes.Marshal(b, m, deterministic)
}
func (m *CreateCourseRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCourseRes.Merge(m, src)
}
func (m *CreateCourseRes) XXX_Size() int {
	return xxx_messageInfo_CreateCourseRes.Size(m)
}
func (m *CreateCourseRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCourseRes.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCourseRes proto.InternalMessageInfo

func (m *CreateCourseRes) GetCourse() *Course {
	if m != nil {
		return m.Course
	}
	return nil
}

type UpdateCourseReq struct {
	Course               *Course  `protobuf:"bytes,1,opt,name=course,proto3" json:"course,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCourseReq) Reset()         { *m = UpdateCourseReq{} }
func (m *UpdateCourseReq) String() string { return proto.CompactTextString(m) }
func (*UpdateCourseReq) ProtoMessage()    {}
func (*UpdateCourseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad75674299e1bb1e, []int{7}
}

func (m *UpdateCourseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCourseReq.Unmarshal(m, b)
}
func (m *UpdateCourseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCourseReq.Marshal(b, m, deterministic)
}
func (m *UpdateCourseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCourseReq.Merge(m, src)
}
func (m *UpdateCourseReq) XXX_Size() int {
	return xxx_messageInfo_UpdateCourseReq.Size(m)
}
func (m *UpdateCourseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCourseReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCourseReq proto.InternalMessageInfo

func (m *UpdateCourseReq) GetCourse() *Course {
	if m != nil {
		return m.Course
	}
	return nil
}

type UpdateCourseRes struct {
	Course               *Course  `protobuf:"bytes,1,opt,name=course,proto3" json:"course,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCourseRes) Reset()         { *m = UpdateCourseRes{} }
func (m *UpdateCourseRes) String() string { return proto.CompactTextString(m) }
func (*UpdateCourseRes) ProtoMessage()    {}
func (*UpdateCourseRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad75674299e1bb1e, []int{8}
}

func (m *UpdateCourseRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCourseRes.Unmarshal(m, b)
}
func (m *UpdateCourseRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCourseRes.Marshal(b, m, deterministic)
}
func (m *UpdateCourseRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCourseRes.Merge(m, src)
}
func (m *UpdateCourseRes) XXX_Size() int {
	return xxx_messageInfo_UpdateCourseRes.Size(m)
}
func (m *UpdateCourseRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCourseRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCourseRes proto.InternalMessageInfo

func (m *UpdateCourseRes) GetCourse() *Course {
	if m != nil {
		return m.Course
	}
	return nil
}

type DeleteCourseReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCourseReq) Reset()         { *m = DeleteCourseReq{} }
func (m *DeleteCourseReq) String() string { return proto.CompactTextString(m) }
func (*DeleteCourseReq) ProtoMessage()    {}
func (*DeleteCourseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad75674299e1bb1e, []int{9}
}

func (m *DeleteCourseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCourseReq.Unmarshal(m, b)
}
func (m *DeleteCourseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCourseReq.Marshal(b, m, deterministic)
}
func (m *DeleteCourseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCourseReq.Merge(m, src)
}
func (m *DeleteCourseReq) XXX_Size() int {
	return xxx_messageInfo_DeleteCourseReq.Size(m)
}
func (m *DeleteCourseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCourseReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCourseReq proto.InternalMessageInfo

func (m *DeleteCourseReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteCourseRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCourseRes) Reset()         { *m = DeleteCourseRes{} }
func (m *DeleteCourseRes) String() string { return proto.CompactTextString(m) }
func (*DeleteCourseRes) ProtoMessage()    {}
func (*DeleteCourseRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad75674299e1bb1e, []int{10}
}

func (m *DeleteCourseRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCourseRes.Unmarshal(m, b)
}
func (m *DeleteCourseRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCourseRes.Marshal(b, m, deterministic)
}
func (m *DeleteCourseRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCourseRes.Merge(m, src)
}
func (m *DeleteCourseRes) XXX_Size() int {
	return xxx_messageInfo_DeleteCourseRes.Size(m)
}
func (m *DeleteCourseRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCourseRes.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCourseRes proto.InternalMessageInfo

func (m *DeleteCourseRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Course)(nil), "course.Course")
	proto.RegisterType((*ListCourseReq)(nil), "course.ListCourseReq")
	proto.RegisterType((*ListCourseRes)(nil), "course.ListCourseRes")
	proto.RegisterType((*ReadCourseReq)(nil), "course.ReadCourseReq")
	proto.RegisterType((*ReadCourseRes)(nil), "course.ReadCourseRes")
	proto.RegisterType((*CreateCourseReq)(nil), "course.CreateCourseReq")
	proto.RegisterType((*CreateCourseRes)(nil), "course.CreateCourseRes")
	proto.RegisterType((*UpdateCourseReq)(nil), "course.UpdateCourseReq")
	proto.RegisterType((*UpdateCourseRes)(nil), "course.UpdateCourseRes")
	proto.RegisterType((*DeleteCourseReq)(nil), "course.DeleteCourseReq")
	proto.RegisterType((*DeleteCourseRes)(nil), "course.DeleteCourseRes")
}

func init() { proto.RegisterFile("course.proto", fileDescriptor_ad75674299e1bb1e) }

var fileDescriptor_ad75674299e1bb1e = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x4f, 0x4b, 0xfb, 0x40,
	0x10, 0x6d, 0xd2, 0x5f, 0xfb, 0xab, 0x63, 0xff, 0xc0, 0xa0, 0x18, 0x72, 0xb1, 0xee, 0x41, 0x0a,
	0x42, 0x0f, 0xf5, 0x20, 0x05, 0x4f, 0xad, 0x07, 0x0f, 0x7a, 0x59, 0xf1, 0xe2, 0x2d, 0x4d, 0x06,
	0x59, 0x68, 0x4d, 0xcc, 0x6e, 0xfd, 0xaa, 0x7e, 0x1d, 0xe9, 0x66, 0xd3, 0xcd, 0x86, 0x06, 0xb4,
	0xb7, 0x9d, 0x99, 0x37, 0xef, 0xcd, 0xbc, 0x65, 0xa0, 0x1f, 0xa7, 0xdb, 0x5c, 0xd2, 0x34, 0xcb,
	0x53, 0x95, 0x62, 0xb7, 0x88, 0xd8, 0x23, 0x74, 0x97, 0xfa, 0x85, 0x43, 0xf0, 0x45, 0x12, 0x78,
	0x63, 0x6f, 0x72, 0xc2, 0x7d, 0x91, 0x20, 0xc2, 0xbf, 0x8f, 0x68, 0x43, 0x81, 0xaf, 0x33, 0xfa,
	0x8d, 0x21, 0xf4, 0x24, 0x6d, 0x48, 0x2a, 0xca, 0x83, 0xb6, 0xce, 0xef, 0x63, 0x36, 0x87, 0xc1,
	0x93, 0x90, 0xaa, 0x60, 0xe3, 0xf4, 0xb9, 0x23, 0xc8, 0xa2, 0x77, 0xd2, 0x94, 0x1d, 0xae, 0xdf,
	0x78, 0x06, 0x9d, 0xb5, 0xd8, 0x08, 0xa5, 0x59, 0x3b, 0xbc, 0x08, 0xd8, 0xb3, 0xdb, 0x2a, 0xf1,
	0x1a, 0xcc, 0x7c, 0x81, 0x37, 0x6e, 0x4f, 0x4e, 0x67, 0xc3, 0xa9, 0x19, 0xde, 0x40, 0x4c, 0x75,
	0x47, 0xa7, 0x52, 0x15, 0xad, 0x4b, 0x3a, 0x1d, 0xb0, 0x4b, 0x18, 0x70, 0x8a, 0x12, 0x3b, 0x49,
	0x6d, 0x35, 0x76, 0xe7, 0x02, 0x5c, 0x3d, 0xaf, 0x59, 0x8f, 0xcd, 0x61, 0xb4, 0xcc, 0x29, 0x52,
	0x64, 0xb9, 0x8f, 0x6e, 0xfd, 0x93, 0xea, 0x6b, 0x96, 0x1c, 0xab, 0xea, 0xb6, 0xfe, 0x5e, 0xf5,
	0x0a, 0x46, 0x0f, 0xb4, 0xa6, 0xaa, 0x6a, 0xdd, 0xc7, 0x9b, 0x3a, 0x44, 0x62, 0x00, 0xff, 0xe5,
	0x36, 0x8e, 0x49, 0x4a, 0x8d, 0xeb, 0xf1, 0x32, 0x9c, 0x7d, 0xfb, 0x30, 0x28, 0x70, 0x2f, 0x94,
	0x7f, 0x89, 0x98, 0x70, 0x01, 0xfd, 0xaa, 0x25, 0x78, 0xb1, 0x9f, 0xc4, 0xf5, 0x38, 0x6c, 0x28,
	0x48, 0xd6, 0xc2, 0x7b, 0x00, 0xfb, 0x95, 0x78, 0x5e, 0x02, 0x9d, 0xff, 0x0f, 0x0f, 0xa6, 0x77,
	0xdd, 0x0b, 0xe8, 0x57, 0xed, 0xb1, 0x13, 0xd4, 0xfc, 0x0e, 0x1b, 0x0a, 0x86, 0xa3, 0x6a, 0x82,
	0xe5, 0xa8, 0xb9, 0x17, 0x36, 0x14, 0xcc, 0x16, 0xf6, 0x00, 0xec, 0x16, 0xce, 0x3d, 0x85, 0x07,
	0xd3, 0x92, 0xb5, 0x16, 0xf0, 0xd6, 0x2b, 0x2a, 0xd9, 0x6a, 0xd5, 0xd5, 0xe7, 0x7d, 0xfb, 0x13,
	0x00, 0x00, 0xff, 0xff, 0xdf, 0xd8, 0x8f, 0x91, 0xee, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CourseServiceClient is the client API for CourseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CourseServiceClient interface {
	CreateCourse(ctx context.Context, in *CreateCourseReq, opts ...grpc.CallOption) (*CreateCourseRes, error)
	ReadCourse(ctx context.Context, in *ReadCourseReq, opts ...grpc.CallOption) (*ReadCourseRes, error)
	UpdateCourse(ctx context.Context, in *UpdateCourseReq, opts ...grpc.CallOption) (*UpdateCourseRes, error)
	DeleteCourse(ctx context.Context, in *DeleteCourseReq, opts ...grpc.CallOption) (*DeleteCourseRes, error)
	ListCourse(ctx context.Context, in *ListCourseReq, opts ...grpc.CallOption) (*ListCourseRes, error)
}

type courseServiceClient struct {
	cc *grpc.ClientConn
}

func NewCourseServiceClient(cc *grpc.ClientConn) CourseServiceClient {
	return &courseServiceClient{cc}
}

func (c *courseServiceClient) CreateCourse(ctx context.Context, in *CreateCourseReq, opts ...grpc.CallOption) (*CreateCourseRes, error) {
	out := new(CreateCourseRes)
	err := c.cc.Invoke(ctx, "/course.CourseService/CreateCourse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courseServiceClient) ReadCourse(ctx context.Context, in *ReadCourseReq, opts ...grpc.CallOption) (*ReadCourseRes, error) {
	out := new(ReadCourseRes)
	err := c.cc.Invoke(ctx, "/course.CourseService/ReadCourse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courseServiceClient) UpdateCourse(ctx context.Context, in *UpdateCourseReq, opts ...grpc.CallOption) (*UpdateCourseRes, error) {
	out := new(UpdateCourseRes)
	err := c.cc.Invoke(ctx, "/course.CourseService/UpdateCourse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courseServiceClient) DeleteCourse(ctx context.Context, in *DeleteCourseReq, opts ...grpc.CallOption) (*DeleteCourseRes, error) {
	out := new(DeleteCourseRes)
	err := c.cc.Invoke(ctx, "/course.CourseService/DeleteCourse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courseServiceClient) ListCourse(ctx context.Context, in *ListCourseReq, opts ...grpc.CallOption) (*ListCourseRes, error) {
	out := new(ListCourseRes)
	err := c.cc.Invoke(ctx, "/course.CourseService/ListCourse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CourseServiceServer is the server API for CourseService service.
type CourseServiceServer interface {
	CreateCourse(context.Context, *CreateCourseReq) (*CreateCourseRes, error)
	ReadCourse(context.Context, *ReadCourseReq) (*ReadCourseRes, error)
	UpdateCourse(context.Context, *UpdateCourseReq) (*UpdateCourseRes, error)
	DeleteCourse(context.Context, *DeleteCourseReq) (*DeleteCourseRes, error)
	ListCourse(context.Context, *ListCourseReq) (*ListCourseRes, error)
}

// UnimplementedCourseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCourseServiceServer struct {
}

func (*UnimplementedCourseServiceServer) CreateCourse(ctx context.Context, req *CreateCourseReq) (*CreateCourseRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCourse not implemented")
}
func (*UnimplementedCourseServiceServer) ReadCourse(ctx context.Context, req *ReadCourseReq) (*ReadCourseRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadCourse not implemented")
}
func (*UnimplementedCourseServiceServer) UpdateCourse(ctx context.Context, req *UpdateCourseReq) (*UpdateCourseRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCourse not implemented")
}
func (*UnimplementedCourseServiceServer) DeleteCourse(ctx context.Context, req *DeleteCourseReq) (*DeleteCourseRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCourse not implemented")
}
func (*UnimplementedCourseServiceServer) ListCourse(ctx context.Context, req *ListCourseReq) (*ListCourseRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCourse not implemented")
}

func RegisterCourseServiceServer(s *grpc.Server, srv CourseServiceServer) {
	s.RegisterService(&_CourseService_serviceDesc, srv)
}

func _CourseService_CreateCourse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCourseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourseServiceServer).CreateCourse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/course.CourseService/CreateCourse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourseServiceServer).CreateCourse(ctx, req.(*CreateCourseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourseService_ReadCourse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadCourseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourseServiceServer).ReadCourse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/course.CourseService/ReadCourse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourseServiceServer).ReadCourse(ctx, req.(*ReadCourseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourseService_UpdateCourse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCourseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourseServiceServer).UpdateCourse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/course.CourseService/UpdateCourse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourseServiceServer).UpdateCourse(ctx, req.(*UpdateCourseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourseService_DeleteCourse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCourseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourseServiceServer).DeleteCourse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/course.CourseService/DeleteCourse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourseServiceServer).DeleteCourse(ctx, req.(*DeleteCourseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourseService_ListCourse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCourseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourseServiceServer).ListCourse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/course.CourseService/ListCourse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourseServiceServer).ListCourse(ctx, req.(*ListCourseReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CourseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "course.CourseService",
	HandlerType: (*CourseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCourse",
			Handler:    _CourseService_CreateCourse_Handler,
		},
		{
			MethodName: "ReadCourse",
			Handler:    _CourseService_ReadCourse_Handler,
		},
		{
			MethodName: "UpdateCourse",
			Handler:    _CourseService_UpdateCourse_Handler,
		},
		{
			MethodName: "DeleteCourse",
			Handler:    _CourseService_DeleteCourse_Handler,
		},
		{
			MethodName: "ListCourse",
			Handler:    _CourseService_ListCourse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "course.proto",
}
